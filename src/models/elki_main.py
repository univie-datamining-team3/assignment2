"""
This is an experimental command line interface for the python pipe to
the elki java implementation.
Currently wrapped algorithms: PreDeCon, HDBSCAN

Experimental, because the parameters for the algorithms need to be adjusted inside
this script, before running
"""


# -*- coding: utf-8 -*-
import os
import sys
from io import StringIO
import argparse
import logging
import pandas as pd
sys.path.append(os.path.join(os.getcwd(), os.pardir, 'src'))

from models.cluster import ElkiPipe
from utils.utilities import str2bool
from sklearn.preprocessing import scale

FLAGS = None
def main():
    data = pd.read_csv(FLAGS.data_dir, sep=";")
    elki = ElkiPipe()

    if FLAGS.algorithm == "predecon":
        params = elki.get_parameters_for_predecon(param_eps = 10.0, param_minpts = 2,
                                                  param_delta = 0.1, param_lambda = 1,
                                                  param_kappa = 20.0)

    elif FLAGS.algorithm == "hdbscan":
        params = elki.get_parameters_for_predecon(param_minpts=100)

    results = elki.run_elki(data, params, plot_path=FLAGS.vis_path)

    if FLAGS.save_results:
        results.to_csv("{}_clustering_results.csv".format(FLAGS.algorithm), index=False, sep=";")


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("--data_dir", type=str,
                        help="Directory for reading data")
    parser.add_argument('--save_results',
                        type=str2bool,
                        default="True",
                        help='Set true, if results should be saved')
    parser.add_argument('--algorithm',
                        type=str,
                        default="predecon",
                        help='Choose which elki algorithm to use: currently supported predecon, hdbscan')
    parser.add_argument('--vis_path',
                        type=str,
                        default=None,
                        help='Set a path to a dir if you want to save some available plots. Note that \
                              this plots are generated by elki and some of them are not really working \
                              as in the GUI')
    FLAGS, unparsed = parser.parse_known_args()
    main()
